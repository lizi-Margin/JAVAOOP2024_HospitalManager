import/*/*/* */*/*/java.io.*;
import/*/* */*/java.util.Scanner;

public/*/* */*/class/*/* */*/Main/*/* */*/{
/*/* */*//*/* */*//*/* */*//*/* */*/public/*/* */*/static/*/* */*/PrintWriter/*/* */*/out/*/* */*/=/*/* */*/new/*/* */*/PrintWriter(new/*/* */*/OutputStreamWriter(System.out));
/*/* */*//*/* */*//*/* */*//*/* */*/public/*/* */*/static/*/* */*/void/*/* */*/main(String[]/*/* */*/args)/*/* */*/{
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/Scanner/*/* */*/scanner/*/* */*/=/*/* */*/new/*/* */*/Scanner(System.in);
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/int/*/* */*/n/*/* */*/=/*/* */*/scanner.nextInt();/*/* */*////*/* */*/输入待排序元素的个数
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/int[]/*/* */*/arr/*/* */*/=/*/* */*/new/*/* */*/int[n];/*/* */*////*/* */*/创建数组
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/for/*/* */*/(int/*/* */*/i/*/* */*/=/*/* */*/0;/*/* */*/i/*/* */*/</*/* */*/n;/*/* */*/i++)/*/* */*/{
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/arr[i]/*/* */*/=/*/* */*/scanner.nextInt();/*/* */*////*/* */*/输入数组元素
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/}
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/scanner.close();

/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/insertionSort(arr);/*/* */*////*/* */*/调用插入排序函数
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/out.close();
/*/* */*//*/* */*//*/* */*//*/* */*/}

/*/* */*//*/* */*//*/* */*//*/* */*////*/* */*/插入排序算法
/*/* */*//*/* */*//*/* */*//*/* */*/public/*/* */*/static/*/* */*/void/*/* */*/insertionSort(int[]/*/* */*/arr)/*/* */*/{
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/int/*/* */*/n/*/* */*/=/*/* */*/arr.length;
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/for/*/* */*/(int/*/* */*/i/*/* */*/=/*/* */*/1;/*/* */*/i/*/* */*/</*/* */*/n;/*/* */*/i++)/*/* */*/{
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/int/*/* */*/key/*/* */*/=/*/* */*/arr[i];
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/int/*/* */*/j/*/* */*/=/*/* */*/i/*/* */*/-/*/* */*/1;

/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/while/*/* */*/(j/*/* */*/>=/*/* */*/0/*/* */*/&&/*/* */*/arr[j]/*/* */*/>/*/* */*/key)/*/* */*/{
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/arr[j/*/* */*/+/*/* */*/1]/*/* */*/=/*/* */*/arr[j];
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/j/*/* */*/=/*/* */*/j/*/* */*/-/*/* */*/1;
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/}
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/arr[j/*/* */*/+/*/* */*/1]/*/* */*/=/*/* */*/key;

/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/int/*/* */*/temp/*/* */*/=/*/* */*/n-1;

/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/for/*/* */*/(int/*/* */*/ii/*/* */*/=/*/* */*/0/*/* */*/;/*/* */*/ii<temp/*/* */*/;ii++){
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/out.print(arr[ii]);
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/out.print('/*/* */*/');
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/}
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/out.println(arr[temp]);
/*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*//*/* */*/}
/*/* */*//*/* */*//*/* */*//*/* */*/}
}
